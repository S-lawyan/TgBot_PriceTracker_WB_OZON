import logging
import random
from datetime import datetime
from datetime import timedelta

from bot.create_bot import bot
from bot.create_bot import db
from bot.create_bot import scheduler
from bot.create_bot import selen


def stopwatch(funk):
    async def wrapper(*args, **kwargs):
        start_time = datetime.now().timestamp()
        await funk(*args, **kwargs)
        await bot.send_message(
            chat_id=514665692,
            text=f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω WB - {datetime.now().timestamp() - start_time}",
        )
        logging.error(
            f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω WB --- {datetime.now().timestamp() - start_time}"
        )
        return

    return wrapper


@stopwatch
async def wb_price_checking() -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –ø—Ä–æ–≤–µ—Ä—è—é—â–∞—è —Ä–∞–∑–Ω–∏—Ü—É —Ü–µ–Ω —Ç–æ–≤–∞—Ä–∞. –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ –≤—Ä–µ–º–µ–Ω–∏.
    :return:
    """
    try:
        scheduler.remove_job("wb_price_checking")
        users_list = await db.get_all_users()
        if len(users_list) == 0:
            return
        for user_id in users_list:
            counter = 0
            positions_list = await db.get_all_position(user_id=user_id, source="wb")
            if len(positions_list) == 0:
                continue
            logging.error(f"–ù–∞—á–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω WB –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            for position in positions_list:
                articul = position[0]
                name = position[1]
                if position[2] != "–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏":
                    price_old = int(position[2])
                else:
                    price_old = False
                img = position[3]

                # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                price_new = await selen.wb_check_price(articul)
                if price_new is not None:
                    counter += 1
                    if price_old == False and price_new != False:
                        logging.error(
                            f"–ò–ó–ú–ï–ù–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê –¢–û–í–ê–†–ê {articul} --- –¢–æ–≤–∞—Ä –ø–æ—è–≤–∏–ª—Å—è –≤ –Ω–∞–ª–∏—á–∏–∏"
                        )
                        await bot.send_photo(
                            user_id,
                            photo=img,
                            caption=f'‚ö°‚ö°‚ö° <b>–¢–æ–≤–∞—Ä –ø–æ—è–≤–∏–ª—Å—è –≤ –Ω–∞–ª–∏—á–∏–∏</b>\nWildberries üü£\n{name}\n<b>–ê—Ä—Ç–∏–∫—É–ª:</b> {articul}\n<b>–¶–µ–Ω–∞:</b> {price_new} ‚ÇΩ\n<a href="https://www.wildberries.ru/catalog/{articul}/detail.aspx">–°–°–´–õ–ö–ê</a>',
                        )
                        await db.update_price(
                            articul=articul,
                            user_id=user_id,
                            price=price_new,
                            source="wb",
                        )

                    elif price_old != False and price_new == False:
                        logging.error(
                            f"–ò–ó–ú–ï–ù–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê –¢–û–í–ê–†–ê {articul} --- –¢–æ–≤–∞—Ä–∞ –±–æ–ª—å—à–µ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
                        )
                        await bot.send_photo(
                            user_id,
                            photo=img,
                            caption=f'‚ö°‚ö° <b>–¢–æ–≤–∞—Ä–∞ –±–æ–ª—å—à–µ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</b>\nWildberries üü£\n{name}\n<b>–ê—Ä—Ç–∏–∫—É–ª:</b> {articul}\n<a href="https://www.wildberries.ru/catalog/{articul}/detail.aspx">–°–°–´–õ–ö–ê</a>',
                        )
                        price_new = "–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
                        await db.update_price(
                            articul=articul,
                            user_id=user_id,
                            price=price_new,
                            source="wb",
                        )

                    elif price_new < price_old:
                        logging.error(
                            f"–ò–ó–ú–ï–ù–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê –¢–û–í–ê–†–ê {articul} --- –¶–µ–Ω–∞ —Å–Ω–∏–∂–µ–Ω–∞ —Å {price_old} –Ω–∞ {price_new}"
                        )
                        difference = price_old - price_new
                        await bot.send_photo(
                            user_id,
                            photo=img,
                            caption=f'‚ö°‚ö°‚ö° <b>–¶–µ–Ω–∞ —Å–Ω–∏–∂–µ–Ω–∞</b>\nWildberries üü£\n{name}\n<b>–ê—Ä—Ç–∏–∫—É–ª:</b> {articul}\n<b>–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞:</b> {price_old} ‚ÇΩ\n<b>–ù–æ–≤–∞—è —Ü–µ–Ω–∞:</b> {price_new} ‚ÇΩ\n<a href="https://www.wildberries.ru/catalog/{articul}/detail.aspx">–°–°–´–õ–ö–ê</a>\n\n<b>–ü–æ–¥–µ—à–µ–≤–µ–ª–æ –Ω–∞: {difference} ‚ÇΩ</b>',
                        )
                        await db.update_price(
                            articul=articul,
                            user_id=user_id,
                            price=price_new,
                            source="wb",
                        )

                    elif price_new > price_old:
                        logging.error(
                            f"–ò–ó–ú–ï–ù–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê –¢–û–í–ê–†–ê {articul} --- –¶–µ–Ω–∞ –≤–æ–∑—Ä–æ—Å–ª–∞ —Å {price_old} –Ω–∞ {price_new}"
                        )
                        difference = price_new - price_old
                        await bot.send_photo(
                            user_id,
                            photo=img,
                            caption=f'‚ö° <b>–¶–µ–Ω–∞ –≤–æ–∑—Ä–æ—Å–ª–∞</b>\nWildberries üü£\n<b>{name}</b>\n–ê—Ä—Ç–∏–∫—É–ª: <b>{articul}</b>\n–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: <b>{price_old}</b> ‚ÇΩ\n–ù–æ–≤–∞—è —Ü–µ–Ω–∞: <b>{price_new}</b> ‚ÇΩ\n<a href="https://www.wildberries.ru/catalog/{articul}/detail.aspx">–°–°–´–õ–ö–ê</a>\n\n<b>–ü–æ–¥–æ—Ä–æ–∂–∞–ª–æ –Ω–∞: {difference} ‚ÇΩ</b>',
                        )
                        await db.update_price(
                            articul=articul,
                            user_id=user_id,
                            price=price_new,
                            source="wb",
                        )

                    else:
                        continue

                else:
                    logging.error(
                        f"–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ü–µ–Ω—ã –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º {articul}"
                    )
                    await bot.send_message(
                        514665692,
                        f"‚ö†Ô∏è –¢–æ–≤–∞—Ä —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º {articul} (WB) –∏—Å—á–µ–∑ —Å —Å–∞–π—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å.",
                    )
                    continue

            await bot.send_message(
                514665692,
                f"–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ {counter} –ø–æ–∑–∏—Ü–∏–π WB",
            )

        await wb_add_price_checking_job()

    except Exception as e:
        logging.error(f" !!!!!! –ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ü–µ–Ω WB –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {e}")
        scheduler.add_job(
            wb_price_checking,
            trigger="interval",
            run_date=datetime.now() + timedelta(seconds=10),
            id="wb_price_checking",
        )


async def wb_add_price_checking_job():
    """
    –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω –∫–∞–∂–¥—ã–π 30 –º–∏–Ω—É—Ç (–≤ –ø–ª–∞–Ω–µ - 60 –º–∏–Ω—É—Ç)
    """
    scheduler.add_job(
        wb_price_checking,
        trigger="interval",
        minutes=random.randint(1, 5),
        id="wb_price_checking",
    )


scheduler.add_job(
    wb_add_price_checking_job,
    trigger="date",
    run_date=datetime.now() + timedelta(seconds=15),
    id="wb_price_checking",
)

__all__ = ["wb_price_checking"]
